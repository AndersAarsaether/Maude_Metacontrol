in manager.maude
***in break.maude
in error_msg.maude

mod TEST is
  protecting MANAGER .
  protecting ERRORMSG .
  ***protecting BREAK .

  vars T C AQ : Oid .
  var DG : Temperature .
  var TI : Time .
  var HS : HeaterStatus .
  var WS : WindowStatus .
  var AQS : AirqualityStatus .
  vars CONF : Configuration .
  vars ET ET1 ET2 : EffectTemp .


  op init2 : -> Configuration .
  eq init2 = < "homeHeater" :Heater | Status: hOff, EffectTemp: 0.615, EffectAQ: -0.45, Broken: no >
            < "homeWaterheater" :Waterheater | Status: whOff, EffectTemp: 0.3, EffectAQ: -0.125, Broken: no >
            < "homeWindow" :Window | Status: closed, EffectTemp: -1.0, EffectAQ: 1.0, Broken: no >
            < "homeThermometer" :Thermometer | Degrees: 21.0 >
            < "homeAirquality" :Airquality | Value: 2.0 >
            < "homeClock" :Clock | Timesteps: 0, Time: 0, TempLog: nil, AqLog: nil >
            < "homeComfortController" :ComfortController | Selected: false >
            < "homeEcoController" :EcoController | Selected: true >
            < "homeDegradedContrA" :DegradedContrA | Selected: false >
            < "homeDegradedContrB" :DegradedContrB | Selected: false >
            < "homeDegradedContrC" :DegradedContrC | Selected: false >
            < "homeMetacontroller" :Metacontroller | MetaLog: nil >
            < "homeQaComfort" :QaComfTemp | Consider: 5, Past: nil, Status: 1, QaComputed: no >
            < "homeQaAirquality" :QaAirPurity | Consider: 5, Past: nil, Status: 1, QaComputed: no >
            < "homeFDComfortController" :FDComfortController | ConController: "homeComfortController" ,ExpQaCT: 7/10, ExpQaAP: 4/10, RequActuators: (heater waterheater window) >
            < "homeFDEcoController" :FDEcoController | ConController: "homeEcoController" ,ExpQaCT: 5/10, ExpQaAP: 7/10, RequActuators: (heater waterheater window) >
            < "homeFDDegAController" :FDDegAController | ConController: "homeDegradedContrA" ,ExpQaCT: 3/10, ExpQaAP: 2/10, RequActuators: (waterheater window) >
            < "homeFDDegBController" :FDDegBController | ConController: "homeDegradedContrB" ,ExpQaCT: 3/10, ExpQaAP: 2/10, RequActuators: (heater window) >
            < "homeFDDegCController" :FDDegCController | ConController: "homeDegradedContrC" ,ExpQaCT: 3/10, ExpQaAP: 2/10, RequActuators: (heater waterheater) >
            < Scheduler | Status: PhysicsChange, RuleApplied: false > .

  op init3 : -> Configuration .
  eq init3 = < "homeHeater" :Heater | Status: hOff, EffectTemp: 0.615, EffectAQ: -0.45, Broken: no >
            < "homeWaterheater" :Waterheater | Status: whOff, EffectTemp: 0.3, EffectAQ: -0.125, Broken: no >
            < "homeWindow" :Window | Status: closed, EffectTemp: -1.0, EffectAQ: 1.0, Broken: no >
            < "homeThermometer" :Thermometer | Degrees: 15.0 >
            < "homeAirquality" :Airquality | Value: 1.0 >
            < "homeClock" :Clock | Timesteps: 0, Time: 0, TempLog: nil, AqLog: nil > .

  op init4 : -> TimedConfiguration .
  eq init4 = {< "homeHeater" :Heater | Status: hOff, EffectTemp: 0.615, EffectAQ: -0.45, Broken: no >
            < "homeWaterheater" :Waterheater | Status: whOff, EffectTemp: 0.3, EffectAQ: -0.125, Broken: no >
            < "homeWindow" :Window | Status: closed, EffectTemp: -1.0, EffectAQ: 1.0, Broken: no >
            < "homeThermometer" :Thermometer | Degrees: 20.5 >
            < "homeAirquality" :Airquality | Value: 2.0 >
            < "homeClock" :Clock | Timesteps: 0, Time: 0, TempLog: nil, AqLog: nil >
            < "homeComfortController" :ComfortController | Selected: true >
            < "homeEcoController" :EcoController | Selected: false >
            < "homeDegradedContrA" :DegradedContrA | Selected: false >
            < "homeDegradedContrB" :DegradedContrB | Selected: false >
            < "homeDegradedContrC" :DegradedContrC | Selected: false >
            ***< "homeMetacontroller" :Metacontroller | MetaLog: nil >
            < "homeFDComfortController" :FDComfortController | ConController: "homeComfortController" ,ExpQaCT: 7/10, ExpQaAP: 4/10, RequActuators: (heater waterheater window) >
            < "homeFDEcoController" :FDEcoController | ConController: "homeEcoController" ,ExpQaCT: 5/10, ExpQaAP: 7/10, RequActuators: (heater waterheater window) >
            < "homeFDDegAController" :FDDegAController | ConController: "homeDegradedContrA" ,ExpQaCT: 3/10, ExpQaAP: 2/10, RequActuators: (waterheater window) >
            < "homeFDDegBController" :FDDegBController | ConController: "homeDegradedContrB" ,ExpQaCT: 3/10, ExpQaAP: 2/10, RequActuators: (heater window) >
            < "homeFDDegCController" :FDDegCController | ConController: "homeDegradedContrC" ,ExpQaCT: 3/10, ExpQaAP: 2/10, RequActuators: (heater waterheater) >
            < "homeQaComfort" :QaComfTemp | Consider: 10, Past: nil, Status: 1, QaComputed: no >
            < "homeQaAirquality" :QaAirPurity | Consider: 10, Past: nil, Status: 1, QaComputed: no >
            < Scheduler | Status: PhysicsChange, RuleApplied: false >
            < RequiredQAs | requQaCT: 3/10, requQaAP: 2/10 >
            < ErrorPropagation | FGinError: false, QaCTinError: false, QaAPinError: false, ActuatorsInError: nil >} .

  op init5 : -> TimedConfiguration .
  eq init5 = {< "homeHeater" :Heater | Status: hOff, EffectTemp: 0.615, EffectAQ: -0.4, Broken: no >
            < "homeWaterheater" :Waterheater | Status: whOff, EffectTemp: 0.3, EffectAQ: -0.125, Broken: no >
            < "homeWindow" :Window | Status: closed, EffectTemp: -1.0, EffectAQ: 1.0, Broken: no >
            < "homeThermometer" :Thermometer | Degrees: 20.5 >
            < "homeAirquality" :Airquality | Value: 2.0 >
            < "homeClock" :Clock | Timesteps: 0, Time: 0, TempLog: nil, AqLog: nil >
            < "homeComfortController" :ComfortController | Selected: true >
            < "homeEcoController" :EcoController | Selected: true >
            < Scheduler | Status: PhysicsChange, RuleApplied: false >} .


endm
eof

search [1, 8000] init4 =>* {CONF:Configuration} such that getTimesteps(CONF) = 713 /\ getTemp(CONF) =/= 1.928000000000063e+1 /\ getTemp(CONF) =/= 1.8750000000000629e+1 .

search [1, 1000] init5 =>* {CONF:Configuration} such that getTemp(CONF) < 18.0 .

search [1, 1000] init5 =>* {CONF:Configuration} such that getTemp(CONF) > 22.0 .

search [1, 1000] init5 =>* {CONF:Configuration} such that getAirquality(CONF) < 0.0 .

*** With metacontroller
search [1, 5000] init4 =>* {CONF:Configuration} such that getTemp(CONF) < 18.0 .

search [1, 5000] init4 =>* {CONF:Configuration} such that getTemp(CONF) > 22.0 .

search [1, 5000] init4 =>* {CONF:Configuration} such that getAirquality(CONF) < 0.0 .

*** Eco controller
search[1, 3000] init4 =>* {CONF:Configuration} such that getTime(CONF) = 242 .
