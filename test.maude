mod TEST is
  ***protecting CONTROLLERS .
  protecting TIME .
  protecting TEMPERATURE .
  protecting AIRQUALITY .

  op getTemp : Configuration -> Temperature .
  op getTime : Configuration -> Time .
  op getAirquality : Configuration -> AirqualityStatus .

  vars T C AQ : Oid .
  var DG : Temperature .
  var TI : Time .
  vars RA1 RA2 : RuleAppliedTemp .
  var HS : HeaterStatus .
  var WS : WindowStatus .
  var AQS : AirqualityStatus .
  vars INIT CON : Configuration .
  vars ET ET1 ET2 : EffectTemp .

  eq getTemp(< T :Thermometer | Degrees: DG > CON) = DG .
  eq getTime(< C :Clock | Time: TI > CON) = TI .
  eq getAirquality(< AQ :Airquality | Value: AQS > CON) = AQS .

  op init : -> Configuration .
  eq init = < "homeHeater" :Heater | Status: hOff, RuleAppliedTemp: no, RuleAppliedAQ: no, EffectsTemp: 0.2, EffectsAQ: 0.4, Active: yes >
            < "homeThermometer" :Thermometer | Degrees: 22.1 >
            < "homeClock" :Clock | Time: 0 > .

  op init2 : -> Configuration .
  eq init2 = < "homeHeater" :Heater | Status: hOff, RuleAppliedTemp: no, RuleAppliedAQ: yes, EffectsTemp: 0.2, EffectsAQ: 0.2, Active: yes >
            < "homeWaterheater" :Waterheater | Status: whOff, RuleAppliedTemp: no, RuleAppliedAQ: yes, EffectsTemp: 0.1, EffectsAQ: 0.1, Active: yes >
            < "homeWindow" :Window | Status: open, RuleAppliedTemp: no, RuleAppliedAQ: yes, EffectsTemp: -0.2, EffectsAQ: -0.2 >
            < "homeThermometer" :Thermometer | Degrees: 22.0 >
            < "homeAirquality" :Airquality | Value: 0.0 >
            < "homeClock" :Clock | Time: 0 > .





endm
eof


search [1] init =>* INIT:Configuration such that getTemp(INIT) <= 0.0 .

search [1] init2 =>* INIT:Configuration such that getTemp(INIT) <= 17.0 /\ getTime(INIT) <= 30 /\ getAirquality(INIT) <= 2.0 .


search [1] init2 =>* INIT:Configuration such that getTemp(INIT) <= 17.0 /\ getTime(INIT) <= 50 .


search [1] init =>* INIT:Configuration such that getTime(INIT) == 10 .

search [1] init2 =>* INIT:Configuration such that getTime(INIT) == 10 .


search [1] init2
           =>*
           < "heterPreferingController" :Controller1 | Selected: yes >
           < "windowPreferingController" :Controller2 | Selected: no >
           < "homeHeater" :Heater | Status: HS, RuleAppliedTemp: RA1, RuleAppliedAQ: no, EffectsTemp: ET1 >
           < "homeWindow" :Window | Status: WS, RuleAppliedTemp: RA2, RuleAppliedAQ: no, EffectsTemp: ET2 >
           < "homeThermometer" :Thermometer | Degrees: DG >
           < "homeClock" :Clock | Time: 10 > .


search [1] init =>* INIT:Configuration such that INIT == init .

search [1] < "homeHeater" :Heater | Status: veryhot, RuleAppliedTemp: no, RuleAppliedAQ: no, EffectsTemp: 0.2 >
          < "homeWindow" :Window | Status: open, RuleAppliedTemp: no, RuleAppliedAQ: no, EffectsTemp: -0.2 >
          < "homeThermometer" :Thermometer | Degrees: 20.0 >
          < "homeClock" :Clock | Time: 0 >
           =>*
           < "homeHeater" :Heater | Status: HS, RuleAppliedTemp: RA1, RuleAppliedAQ: no, EffectsTemp: ET1 >
           < "homeWindow" :Window | Status: WS, RuleAppliedTemp: RA2, RuleAppliedAQ: no, EffectsTemp: ET2 >
           < "homeThermometer" :Thermometer | Degrees: DG >
           < "homeClock" :Clock | Time: TI >
           such that TI == 0 /\ DG == 20.0 /\ ET1 == 0.2 /\ ET2 == - 0.2
           /\ HS == veryhot /\ WS == open /\ RA1 == no /\ RA2 == no .

search [1] < "homeHeater" :Heater | Status: veryhot, RuleAppliedTemp: no, RuleAppliedAQ: no, EffectsTemp: 0.2 >
           < "homeWindow" :Window | Status: open, RuleAppliedTemp: no, RuleAppliedAQ: no, EffectsTemp: -0.2 >
           < "homeThermometer" :Thermometer | Degrees: 20.0 >
           < "homeClock" :Clock | Time: 0 >
            =>*
            < "homeHeater" :Heater | Status: veryhot, RuleAppliedTemp: no, RuleAppliedAQ: no, EffectsTemp: 0.2 >
            < "homeWindow" :Window | Status: open, RuleAppliedTemp: no, RuleAppliedAQ: no, EffectsTemp: -0.2 >
            < "homeThermometer" :Thermometer | Degrees: 20.0 >
            < "homeClock" :Clock | Time: 0 > .
