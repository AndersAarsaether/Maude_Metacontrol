mod TEST is
  ***protecting CONTROLLERS .
  protecting TIME .
  protecting TEMPERATURE .
  protecting AIRQUALITY .
  protecting COMFORTCONTROLLER .
  protecting ECOCONTROLLER .
  protecting HEATERERRCONTROLLER .
  protecting WATERHEATERERRCONTROLLER .
  protecting WINDOWERRCONTROLLER .
  ***protecting BREAK .

  op getTemp : Configuration -> Temperature .
  ***op getTime : Configuration -> Time .


  vars T C AQ : Oid .
  var DG : Temperature .
  var TI : Time .
  vars RA1 RA2 : RuleAppliedTemp .
  var HS : HeaterStatus .
  var WS : WindowStatus .
  var AQS : AirqualityStatus .
  vars INIT CON : Configuration .
  vars ET ET1 ET2 : EffectTemp .

  eq getTemp(< T :Thermometer | Degrees: DG > CON) = DG .
  *** eq getTime(< C :Clock | Time: TI > CON) = TI .

  op init : -> Configuration .
  eq init = {< "homeHeater" :Heater | Status: off, RuleAppliedTemp: no, RuleAppliedAQ: yes, EffectsTemp: 1.0, EffectsAQ: -0.5, Broken: no >
            < "homeThermometer" :Thermometer | Degrees: 22.1 >
            < "homeClock" :Clock | Timesteps: 48, Time: 0 >} .

  op init2 : -> Configuration .
  eq init2 = {< "homeHeater" :Heater | Status: fairlyhot, RuleAppliedTemp: yes, RuleAppliedAQ: yes, EffectsTemp: 1.0, EffectsAQ: -0.5, Broken: no >
            < "homeWaterheater" :Waterheater | Status: on, RuleAppliedTemp: yes, RuleAppliedAQ: yes, EffectsTemp: 0.5, EffectsAQ: -0.25, Broken: no >
            < "homeWindow" :Window | Status: open, RuleAppliedTemp: yes, RuleAppliedAQ: yes, EffectsTemp: -0.5, EffectsAQ: 1.0, Broken: yes >
            < "homeThermometer" :Thermometer | Degrees: 25.0 >
            < "homeAirquality" :Airquality | Value: -1.0 >
            < "homeClock" :Clock | Timesteps: 7, Time: 17 >
            < "homeComfortController" :ComfortController | Selected: no >
            < "homeEcoController" :EcoController | Selected: no >
            < "homeHeaterErrController" :HeaterErrController | Selected: no >
            < "homeWaterheaterErrController" :WaterheaterErrController | Selected: no >
            < "homeWindowErrController" :WindowErrController | Selected: yes >} .

  op init3 : -> Configuration .
  eq init3 = {< "homeHeater" :Heater | Status: off, RuleAppliedTemp: yes, RuleAppliedAQ: yes, EffectsTemp: 1.0, EffectsAQ: -0.5, Broken: no >
            < "homeWaterheater" :Waterheater | Status: on, RuleAppliedTemp: yes, RuleAppliedAQ: yes, EffectsTemp: 0.5, EffectsAQ: -0.25, Broken: no >} .




endm
eof


search [1] init =>* INIT:Configuration such that getTemp(INIT) <= 0.0 .

search [1] init2 =>* INIT:Configuration such that getTemp(INIT) <= 17.0 /\ getTime(INIT) <= 30 /\ getAirquality(INIT) <= 2.0 .


search [1] init2 =>* INIT:Configuration such that getTemp(INIT) <= 17.0 /\ getTime(INIT) <= 50 .


search [1] init =>* INIT:Configuration such that getTime(INIT) == 10 .

search [1] init2 =>* INIT:Configuration such that getTime(INIT) == 10 .


search [1] init2
           =>*
           < "heterPreferingController" :Controller1 | Selected: yes >
           < "windowPreferingController" :Controller2 | Selected: no >
           < "homeHeater" :Heater | Status: HS, RuleAppliedTemp: RA1, RuleAppliedAQ: no, EffectsTemp: ET1 >
           < "homeWindow" :Window | Status: WS, RuleAppliedTemp: RA2, RuleAppliedAQ: no, EffectsTemp: ET2 >
           < "homeThermometer" :Thermometer | Degrees: DG >
           < "homeClock" :Clock | Time: 10 > .


search [1] init =>* INIT:Configuration such that INIT == init .

search [1] < "homeHeater" :Heater | Status: veryhot, RuleAppliedTemp: no, RuleAppliedAQ: no, EffectsTemp: 0.2 >
          < "homeWindow" :Window | Status: open, RuleAppliedTemp: no, RuleAppliedAQ: no, EffectsTemp: -0.2 >
          < "homeThermometer" :Thermometer | Degrees: 20.0 >
          < "homeClock" :Clock | Time: 0 >
           =>*
           < "homeHeater" :Heater | Status: HS, RuleAppliedTemp: RA1, RuleAppliedAQ: no, EffectsTemp: ET1 >
           < "homeWindow" :Window | Status: WS, RuleAppliedTemp: RA2, RuleAppliedAQ: no, EffectsTemp: ET2 >
           < "homeThermometer" :Thermometer | Degrees: DG >
           < "homeClock" :Clock | Time: TI >
           such that TI == 0 /\ DG == 20.0 /\ ET1 == 0.2 /\ ET2 == - 0.2
           /\ HS == veryhot /\ WS == open /\ RA1 == no /\ RA2 == no .

search [1] < "homeHeater" :Heater | Status: veryhot, RuleAppliedTemp: no, RuleAppliedAQ: no, EffectsTemp: 0.2 >
           < "homeWindow" :Window | Status: open, RuleAppliedTemp: no, RuleAppliedAQ: no, EffectsTemp: -0.2 >
           < "homeThermometer" :Thermometer | Degrees: 20.0 >
           < "homeClock" :Clock | Time: 0 >
            =>*
            < "homeHeater" :Heater | Status: veryhot, RuleAppliedTemp: no, RuleAppliedAQ: no, EffectsTemp: 0.2 >
            < "homeWindow" :Window | Status: open, RuleAppliedTemp: no, RuleAppliedAQ: no, EffectsTemp: -0.2 >
            < "homeThermometer" :Thermometer | Degrees: 20.0 >
            < "homeClock" :Clock | Time: 0 > .
