fmod CLOCK is
  protecting ACTUATORS .

  sort Clock TimedConfiguration .
  subsort Clock < Configuration .

  sort Timesteps Time .
  subsort Nat < Timesteps .
  subsort Nat < Time .

  *** [Time, Value]-pair list used for the temperature/air quality log
  sorts TimeValuePair TVPList .
  subsort TimeValuePair < TVPList .

  op nil : -> TVPList [ctor] .
  op __ : TVPList TVPList -> TVPList [ctor assoc id: nil] .

  op (_, _) : Timesteps Float -> TimeValuePair .

  *** Timed configuration is used in some rules to ensure that they are only applied to full configurations (not to only parts of them)
  op {_} : Configuration -> TimedConfiguration .

  op < _ :Clock | Timesteps: _, Time: _, TempLog: _, AqLog: _ > : Oid Timesteps Time TVPList TVPList -> Clock [format (ntm m m m m m m m m m ntm m m ntm m m o)] .

  var C : Oid .
  var TS : Timesteps .
  var TI : Time .
  var N : Time .
  var TL AL : TVPList .
  var CONF : Configuration .

  *** Compute time with given time steps as Timesteps mod 24
  op getTime : Timesteps -> Time .
  eq getTime(TS) = TS rem 24 .

  *** Define morning to be between 6 and 12 o'clock.
  op morning : Time -> Bool .
  ceq morning(N) = true if 6 <= N /\ N <= 12 .
  eq morning(N) = false [owise] .

  op getTimesteps : Configuration -> Timesteps .
  eq getTimesteps(< C :Clock | Timesteps: TS, Time: TI, TempLog: TL, AqLog: AL > CONF) = TS .

endfm
