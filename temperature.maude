in ~/Documents/Maude_Metacontrol/actuators.maude

mod TEMPERATURE is
  protecting ACTUATORS .
  protecting FLOAT .

  sorts Thermometer .
  subsorts Thermometer < Configuration .

  sorts Temperature .
  subsort Float < Temperature .

  op < _ :Thermometer | Degrees: _ > : Oid Temperature -> Thermometer [format (ntb b b b b b b o)] .

  op cold? : Temperature -> Bool .
  op hot? : Temperature -> Bool .

  var DG : Temperature .

  ceq cold?(DG) = true if DG < 18.0 .
  ceq cold?(DG) = false if DG >= 18.0 .

  ceq hot?(DG) = true if DG > 22.0 .
  ceq hot?(DG) = false if DG <= 22.0 .


  vars H WH W T C : Oid .
  var HS : HeaterStatus .
  var WHS : WaterheaterStatus .
  var WS : WindowStatus .
  vars RA : RuleAppliedTemp .
  vars ET : EffectTemp .
  vars A A1 A2 : Attribute .

  *** Rules heater
  *** If the heater did not affect the temperature in the room in the current hour yet, then the temperature increases depending on the status of the heater.
  crl [TempHeaterOff] :
    < H :Heater | Status: hOff, RuleAppliedTemp: no, A >
    < WH :Waterheater | Status: WHS, A1 >
    < W :Window | Status: WS, A2 >
    < T :Thermometer | Degrees: DG >
    =>
    < H :Heater | Status: hOff, RuleAppliedTemp: yes, A >
    < WH :Waterheater | Status: WHS, A1 >
    < W :Window | Status: WS, A2 >
    < T :Thermometer | Degrees: DG >
    if not (WHS == whOff and WS == closed)
    [print "Degrees: " DG ", rule: [TempHeaterOff]"] .

  rl [TempHeaterFairlyhot] :
    < H :Heater | Status: fairlyhot, RuleAppliedTemp: no, EffectsTemp: ET, A >
    < T :Thermometer | Degrees: DG >
    =>
    < H :Heater | Status: fairlyhot, RuleAppliedTemp: yes, EffectsTemp: ET, A >
    < T :Thermometer | Degrees: DG + ET >
    [print "Degrees: " DG ", rule: [TempHeaterFairlyhot]"] .

  rl [TempHeaterVeryhot] :
    < H :Heater | Status: veryhot, RuleAppliedTemp: no, EffectsTemp: ET, A >
    < T :Thermometer | Degrees: DG >
    =>
    < H :Heater | Status: veryhot, RuleAppliedTemp: yes, EffectsTemp: ET, A >
    < T :Thermometer | Degrees: DG + 2.0 * ET >
    [print "Degrees: " DG ", rule: [TempHeaterVeryhot] "] .

  *** Rules water heater
  *** If the water heater did not affect the temperature in the room in the current hour yet, then the temperature increases depending on the status of the water heater.
  crl [TempWaterheaterOff] :
    < H :Heater | Status: HS, A >
    < WH :Waterheater | Status: whOff, RuleAppliedTemp: no, A1 >
    < W :Window | Status: WS, A2 >
    < T :Thermometer | Degrees: DG >
    =>
    < H :Heater | Status: HS, A >
    < WH :Waterheater | Status: whOff, RuleAppliedTemp: yes, A1 >
    < W :Window | Status: WS, A2 >
    < T :Thermometer | Degrees: DG >
    if not (HS == hOff and WS == closed)
    [print "Degrees: " DG ", rule: [TempWaterheaterOff]"] .

  rl [TempWaterheaterOn] :
    < WH :Waterheater | Status: on, RuleAppliedTemp: no, EffectsTemp: ET, A >
    < T :Thermometer | Degrees: DG >
    =>
    < WH :Waterheater | Status: on, RuleAppliedTemp: yes, EffectsTemp: ET, A >
    < T :Thermometer | Degrees: DG + ET >
    [print "Degrees: " DG ", rule: [TempWaterheaterOn] "] .

  *** Rules Window
  *** If the window did not affect the temperature in the room in the current hour yet, then the temperature decreases depending on the status of the window.
  crl [TempWindowClosed] :
    < H :Heater | Status: HS, A >
    < WH :Waterheater | Status: WHS, A1 >
    < W :Window | Status: closed, RuleAppliedTemp: no, A2 >
    < T :Thermometer | Degrees: DG >
    =>
    < H :Heater | Status: HS, A >
    < WH :Waterheater | Status: WHS, A1 >
    < W :Window | Status: closed, RuleAppliedTemp: yes, A2 >
    < T :Thermometer | Degrees: DG >
    if not (HS == hOff and WHS == whOff)
    [print "Degrees: " DG ", rule: [TempWindowClosed]"] .

  rl [TempWindowHalfopen] :
    < W :Window | Status: halfopen, RuleAppliedTemp: no, EffectsTemp: ET, A >
    < T :Thermometer | Degrees: DG >
    =>
    < W :Window | Status: halfopen, RuleAppliedTemp: yes, EffectsTemp: ET, A >
    < T :Thermometer | Degrees: DG + ET >
    [print "Degrees: " DG "rule: [TempWindowHalfopen]"] .

  rl [TempWindowOpen] :
    < W :Window | Status: open, RuleAppliedTemp: no, EffectsTemp: ET, A >
    < T :Thermometer | Degrees: DG >
    =>
    < W :Window | Status: open, RuleAppliedTemp: yes, EffectsTemp: ET, A >
    < T :Thermometer | Degrees: DG + 2.0 * ET >
    [print "Degrees: " DG ", rule: [TempWindowOpen]"] .

  *** If heater and water heater are off and the window is closed, then the temperature also decreases a bit
  rl [TempAllOff] :
    < H :Heater | Status: hOff, RuleAppliedTemp: no, A >
    < WH :Waterheater | Status: whOff, RuleAppliedTemp: no, A1 >
    < W :Window | Status: closed, RuleAppliedTemp: no, A2 >
    < T :Thermometer | Degrees: DG >
    =>
    < H :Heater | Status: hOff, RuleAppliedTemp: yes, A >
    < WH :Waterheater | Status: whOff, RuleAppliedTemp: yes, A1 >
    < W :Window | Status: closed, RuleAppliedTemp: yes, A2 >
    < T :Thermometer | Degrees: DG - 0.25 >
    [print "Degrees: " DG ", rule: [TempAllOff]"] .

endm
