mod BREAK is
  protecting TIME .

  vars H W WH C : Oid .
  var HS : HeaterStatus .
  var WHS : WaterheaterStatus .
  var WS : WindowStatus .
  var TS : Timesteps .
  var TI : Time .
  var A : Attribute .

  *** This breaks all actuators immediately, so we have to find another way to implement it
  *** We assume that an actuator that is broken goes to status off/closed
  crl [HeaterBreaks] :
    < H :Heater | Status: HS, Broken: no, A >
    < C :Clock | Timesteps: TS, Time: TI >
    =>
    < H :Heater | Status: hOff, Broken: yes, A >
    < C :Clock | Timesteps: TS, Time: TI >
    if TS >= 20
    [print "rule: [HeaterBreaks]"] .

  crl [WaterheaterBreaks] :
    < WH :Waterheater | Status: WHS, Broken: no, A >
    < C :Clock | Timesteps: TS, Time: TI >
    =>
    < WH :Waterheater | Status: whOff, Broken: yes, A >
    < C :Clock | Timesteps: TS, Time: TI >
    if TS >= 20
    [print "rule: [WaterheaterBreaks]"] .

  crl [WindowBreaks] :
    < W :Window | Status: WS, Broken: no, A >
    < C :Clock | Timesteps: TS, Time: TI >
    =>
    < W :Window | Status: closed, Broken: yes, A >
    < C :Clock | Timesteps: TS, Time: TI >
    if TS >= 20
    [print "rule: [WindowBreaks]"] .

endm
