in ~/Documents/Maude_Metacontrol/comfort_controller.maude
in ~/Documents/Maude_Metacontrol/eco_controller.maude
in ~/Documents/Maude_Metacontrol/heater_err_controller.maude
in ~/Documents/Maude_Metacontrol/wh_error_controller.maude
in ~/Documents/Maude_Metacontrol/window_error_controller.maude
in ~/Documents/Maude_Metacontrol/qualityattributes.maude

mod METACONTROL is
  protecting COMFORTCONTROLLER .
  protecting ECOCONTROLLER .
  protecting HEATERERRCONTROLLER .
  protecting WATERHEATERERRCONTROLLER .
  protecting WINDOWERRCONTROLLER .
  protecting QUALITYATTRIBUTES .

  sort Metacontroller .
  subsort Metacontroller < Configuration .

  op < _ :Metacontroller > : Oid -> Metacontroller [format (ntr r r r o)] .

  vars H WH W CC EC HEC WHEC WEC MC QAC QAAQ : Oid .
  var HS : HeaterStatus .
  var WHS : WaterheaterStatus .
  var WS : WindowStatus .
  var A : Attribute .
  var N : Nat .
  var QAL : QaList .
  var QAS : QaStatus .

*** TODO Should the metacontroller also turn the actuators off?

  ****************************************** From comfort controller to error controller
  *** If the comfort controller is active and the heater is broken, then activate the heater error controller
  rl [MetaContrComfortToHErr] :
    < H :Heater | Broken: yes, A >
    < CC :ComfortController | Selected: yes >
    < HEC :HeaterErrController | Selected: no >
    < MC :Metacontroller >
    =>
    < H :Heater | Broken: yes, A >
    < CC :ComfortController | Selected: no >
    < HEC :HeaterErrController | Selected: yes >
    < MC :Metacontroller >
    [print "rule: [MetaContrComfortToHErr]"] .

  *** If the comfort controller is active and the water heater is broken, then activate the water heater error controller
  rl [MetaContrComfortToWhErr] :
    < WH :Waterheater | Broken: yes, A >
    < CC :ComfortController | Selected: yes >
    < WHEC :WaterheaterErrController | Selected: no >
    < MC :Metacontroller >
    =>
    < WH :Waterheater | Broken: yes, A >
    < CC :ComfortController | Selected: no >
    < WHEC :WaterheaterErrController | Selected: yes >
    < MC :Metacontroller >
    [print "rule: [MetaContrComfortToWhErr]"] .

  *** If the comfort controller is active and the window is broken, then activate the window error controller
  rl [MetaContrComfortToWErr] :
    < W :Window | Broken: yes, A >
    < CC :ComfortController | Selected: yes >
    < WEC :WindowErrController | Selected: no >
    < MC :Metacontroller >
    =>
    < W :Window | Broken: yes, A >
    < CC :ComfortController | Selected: no >
    < WEC :WindowErrController | Selected: yes >
    < MC :Metacontroller >
    [print "rule: [MetaContrComfortToWErr]"] .



  ******************************************* From eco controller to error controller
  *** If the eco controller is active and the heater is broken, then activate the heater error controller
  rl [MetaContrEcoToHErr] :
    < H :Heater | Broken: yes, A >
    < EC :EcoController | Selected: yes >
    < HEC :HeaterErrController | Selected: no >
    < MC :Metacontroller >
    =>
    < H :Heater | Broken: yes, A >
    < EC :EcoController | Selected: no >
    < HEC :HeaterErrController | Selected: yes >
    < MC :Metacontroller >
    [print "rule: [MetaContrEcoToHErr]"] .

  *** If the eco controller is active and the water heater is broken, then activate the water heater error controller
  rl [MetaContrEcoToWhErr] :
    < WH :Waterheater | Broken: yes, A >
    < EC :EcoController | Selected: yes >
    < WHEC :WaterheaterErrController | Selected: no >
    < MC :Metacontroller >
    =>
    < WH :Waterheater | Broken: yes, A >
    < EC :EcoController | Selected: no >
    < WHEC :WaterheaterErrController | Selected: yes >
    < MC :Metacontroller >
    [print "rule: [MetaContrEcoToWhErr]"] .

  *** If the eco controller is active and the window is broken, then activate the window error controller
  rl [MetaContrEcoToWErr] :
    < W :Window | Broken: yes, A >
    < EC :EcoController | Selected: yes >
    < WEC :WindowErrController | Selected: no >
    < MC :Metacontroller >
    =>
    < W :Window | Broken: yes, A >
    < EC :EcoController | Selected: no >
    < WEC :WindowErrController | Selected: yes >
    < MC :Metacontroller >
    [print "rule: [MetaContrEcoToWErr]"] .




  ************************************** Change between comfort and eco controller
  *** If QA comfort is below 0.6 and eco controller is active, then change to comfort controller
  crl [MetaContrEcoToComf] :
    < CC :ComfortController | Selected: no >
    < EC :EcoController | Selected: yes >
    < QAC :QaComfort | Consider: N, Past: QAL, Status: QAS >
    < MC :Metacontroller >
    =>
    < CC :ComfortController | Selected: yes >
    < EC :EcoController | Selected: no >
    < QAC :QaComfort | Consider: N, Past: QAL, Status: QAS >
    < MC :Metacontroller >
    if QAS < 6/10
    [print "rule: [MetaContrEcoToComf]"] .

  *** If QA air quality is below 0.6 and comfort controller is active, then change to eco controller
  crl [MetaContrComfToEco] :
    < CC :ComfortController | Selected: yes >
    < EC :EcoController | Selected: no >
    < QAAQ :QaAirquality | Consider: N, Past: QAL, Status: QAS >
    < MC :Metacontroller >
    =>
    < CC :ComfortController | Selected: no >
    < EC :EcoController | Selected: yes >
    < QAAQ :QaAirquality | Consider: N, Past: QAL, Status: QAS >
    < MC :Metacontroller >
    if QAS < 6/10
    [print "rule: [MetaContrComfToEco]"] .

endm
eof
