import ast

temperatures = """(0,20) (1,30) (2,31) (3,17) (4,27) (5,28) (6,28) (7,27) (8,29) (9,31) (10,19) (11,25) (12,27) (13,29) (14,29) (15,29) (
    16,29) (17,30) (18,30) (19,31) (20,17) (21,27) (22,27) (23,27) (0,27) (1,27) (2,27) (3,27) (4,27) (5,28) (6,28) (7,27) (8,29) (9,31) (
    10,19) (11,25) (12,27) (13,29) (14,29) (15,29) (16,29) (17,30) (18,30) (19,31) (20,17) (21,27) (22,27) (23,27) (0,27) (1,27) (2,27) (
    3,27) (4,27) (5,28) (6,28) (7,27) (8,29) (9,31) (10,19) (11,25) (12,27) (13,29) (14,29) (15,29) (16,29) (17,30) (18,30) (19,31) (20,
    17) (21,27) (22,27) (23,27) (0,27) (1,27) (2,27) (3,27) (4,27) (5,28) (6,28) (7,27) (8,29) (9,31) (10,19) (11,25) (12,27) (13,29) (14,
    29) (15,29) (16,29) (17,30) (18,30) (19,31) (20,17) (21,27) (22,27) (23,27) (0,27) (1,27) (2,27) (3,27) (4,27) (5,28) (6,28) (7,27) (
    8,29) (9,31) (10,19) (11,25) (12,27) (13,29) (14,29) (15,29) (16,29) (17,30) (18,30) (19,31) (20,17) (21,27) (22,27) (23,27) (0,27) (
    1,27) (2,27) (3,27) (4,27) (5,28) (6,28) (7,27) (8,29) (9,31) (10,19) (11,25) (12,27) (13,29) (14,29) (15,29) (16,29) (17,30) (18,30)
    (19,31) (20,17) (21,27) (22,27) (23,27) (0,27) (1,27) (2,27) (3,27) (4,27) (5,28) (6,28) (7,27) (8,29) (9,31) (10,19) (11,25) (12,27)
    (13,29) (14,29) (15,29) (16,29) (17,30) (18,30) (19,31) (20,17) (21,27) (22,27) (23,27) (0,27) (1,27) (2,27) (3,27) (4,27) (5,28) (6,
    28) (7,27) (8,29) (9,31) (10,19) (11,25) (12,27) (13,29) (14,29) (15,29) (16,29) (17,30) (18,30) (19,31) (20,17) (21,27) (22,27) (23,
    27) (0,27) (1,27) (2,27) (3,27) (4,27) (5,28) (6,28) 7,27"""

air_qualities = """(0,1) (1,-7) (2,-6) (3,8) (4,0) (5,1) (6,0) (7,3) (8,1) (9,-1) (10,12) (11,7) (12,5) (13,3) (14,2) (15,1) (16,0) (17,1) (
    18,0) (19,1) (20,15) (21,7) (22,6) (23,5) (0,4) (1,3) (2,2) (3,1) (4,0) (5,1) (6,0) (7,3) (8,1) (9,-1) (10,12) (11,7) (12,5) (13,3) (
    14,2) (15,1) (16,0) (17,1) (18,0) (19,1) (20,15) (21,7) (22,6) (23,5) (0,4) (1,3) (2,2) (3,1) (4,0) (5,1) (6,0) (7,3) (8,1) (9,-1) (
    10,12) (11,7) (12,5) (13,3) (14,2) (15,1) (16,0) (17,1) (18,0) (19,1) (20,15) (21,7) (22,6) (23,5) (0,4) (1,3) (2,2) (3,1) (4,0) (5,1)
    (6,0) (7,3) (8,1) (9,-1) (10,12) (11,7) (12,5) (13,3) (14,2) (15,1) (16,0) (17,1) (18,0) (19,1) (20,15) (21,7) (22,6) (23,5) (0,4) (1,
    3) (2,2) (3,1) (4,0) (5,1) (6,0) (7,3) (8,1) (9,-1) (10,12) (11,7) (12,5) (13,3) (14,2) (15,1) (16,0) (17,1) (18,0) (19,1) (20,15) (
    21,7) (22,6) (23,5) (0,4) (1,3) (2,2) (3,1) (4,0) (5,1) (6,0) (7,3) (8,1) (9,-1) (10,12) (11,7) (12,5) (13,3) (14,2) (15,1) (16,0) (
    17,1) (18,0) (19,1) (20,15) (21,7) (22,6) (23,5) (0,4) (1,3) (2,2) (3,1) (4,0) (5,1) (6,0) (7,3) (8,1) (9,-1) (10,12) (11,7) (12,5) (
    13,3) (14,2) (15,1) (16,0) (17,1) (18,0) (19,1) (20,15) (21,7) (22,6) (23,5) (0,4) (1,3) (2,2) (3,1) (4,0) (5,1) (6,0) (7,3) (8,1) (9,
    -1) (10,12) (11,7) (12,5) (13,3) (14,2) (15,1) (16,0) (17,1) (18,0) (19,1) (20,15) (21,7) (22,6) (23,5) (0,4) (1,3) (2,2) (3,1) (4,0)
    (5,1) (6,0) 7,3"""

good_temp_range = (20, 30)
air_quality_limit = 0

def get_tuples(string):
    single_line = string.replace(")\n", ") ")
    single_line = single_line.replace("\n", "")
    normalized = single_line.replace("    ", "")
    tuple_list = normalized.split()
    if not "(" in tuple_list[-1]:
      tuple_list[-1] = f"({tuple_list[-1]})"
    tuples = []
    for string_tuple in tuple_list:
      tuples.append(ast.literal_eval(string_tuple))
    return tuples;

def analyse_temperature(tuples):
  errors = 0
  for tuple in tuples:
      if tuple[1] < good_temp_range[0] or tuple[1] > good_temp_range[1]:
        errors += 1
  return errors

def analyse_air_qualities(tuples):
  errors = 0
  for tuple in tuples:
      if tuple[1] < air_quality_limit:
        errors += 1
  return errors

def display_result(temp_errors, aq_errors):
  print(f"Temperature errors: {temp_errors}\nAir quality errors: {aq_errors}\nTotal errors:\t    {temp_errors + aq_errors}")

temperature_tuples = get_tuples(temperatures)
air_quality_tuples = get_tuples(air_qualities)

temp_errors = analyse_temperature(temperature_tuples)
aq_errors = analyse_air_qualities(air_quality_tuples)

display_result(temp_errors, aq_errors)
