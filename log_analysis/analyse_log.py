import ast

temperatures = """(0,25) (1,27) (2,15) (3,18) (4,21) (5,23) (6,25) (7,27) (8,29) (9,31) (10,19) (11,22) (12,24) (13,26) (14,28) (15,30) (
    16,32) (17,18) (18,21) (19,23) (20,25) (21,27) (22,29) (23,31) (0,17) (1,20) (2,23) (3,25) (4,27) (5,29) (6,31) (7,19) (8,22) (9,24) (
    10,26) (11,28) (12,30) (13,32) (14,18) (15,21) (16,23) (17,25) (18,27) (19,29) (20,31) (21,17) (22,20) (23,23) (0,25) (1,27) (2,29) (
    3,31) (4,24) (5,26) (6,28) (7,30) (8,32) (9,20) (10,23) (11,25) (12,27) (13,29) (14,31) (15,24) (16,26) (17,28) (18,30) (19,32) (20,
    25) (21,27) (22,29) (23,31) (0,24) (1,26) (2,28) (3,30) (4,32) (5,25) (6,27) (7,29) (8,31) (9,19) (10,22) (11,24) (12,26) (13,28) (14,
    30) (15,32) (16,18) (17,21) (18,23) (19,25) (20,27) (21,29) (22,31) (23,17) (0,20) (1,23) (2,25) (3,27) (4,29) (5,31) (6,24) (7,26) (
    8,28) (9,30) (10,32) (11,20) (12,23) (13,25) (14,27) (15,29) (16,31) (17,24) (18,26) (19,28) (20,30) (21,32) (22,25) (23,27) (0,29) (
    1,31) (2,24) (3,26) (4,28) (5,30) (6,32) (7,20) (8,23) (9,25) (10,27) (11,29) (12,31) (13,19) (14,22) (15,24) (16,26) (17,28) (18,30)
    (19,32) (20,18) (21,21) (22,23) (23,25) (0,27) (1,29) (2,31) (3,17) (4,20) (5,23) (6,25) (7,27) (8,29) (9,31) (10,19) (11,22) (12,24)
    (13,26) (14,28) (15,30) (16,32) (17,18) (18,21) (19,23) (20,25) (21,27) (22,29) (23,31) (0,17) (1,20) (2,23) (3,25) (4,27) (5,29) (6,
    31) (7,19) (8,22) (9,24) (10,26) (11,28) (12,30) (13,32) (14,18) (15,21) (16,23) (17,25) (18,27) (19,29) (20,31) (21,17) (22,20) (23,
    23) (0,25) (1,27) (2,29) (3,31) (4,24) (5,26) (6,28) 7,30"""

air_qualities = """(0,1) (1,-1) (2,10) (3,10) (4,10) (5,8) (6,6) (7,4) (8,2) (9,0) (10,10) (11,10) (12,8) (13,6) (14,4) (15,2) (16,0) (17,10)
    (18,10) (19,8) (20,6) (21,4) (22,2) (23,0) (0,10) (1,10) (2,10) (3,8) (4,6) (5,4) (6,2) (7,10) (8,10) (9,8) (10,6) (11,4) (12,2) (13,
    0) (14,10) (15,10) (16,8) (17,6) (18,4) (19,2) (20,0) (21,10) (22,10) (23,10) (0,8) (1,6) (2,4) (3,2) (4,9) (5,7) (6,5) (7,3) (8,1) (
    9,10) (10,10) (11,8) (12,6) (13,4) (14,2) (15,9) (16,7) (17,5) (18,3) (19,1) (20,8) (21,6) (22,4) (23,2) (0,9) (1,7) (2,5) (3,3) (4,1)
    (5,8) (6,6) (7,4) (8,2) (9,10) (10,10) (11,8) (12,6) (13,4) (14,2) (15,0) (16,10) (17,10) (18,8) (19,6) (20,4) (21,2) (22,0) (23,10) (
    0,10) (1,10) (2,8) (3,6) (4,4) (5,2) (6,9) (7,7) (8,5) (9,3) (10,1) (11,10) (12,10) (13,8) (14,6) (15,4) (16,2) (17,9) (18,7) (19,5) (
    20,3) (21,1) (22,8) (23,6) (0,4) (1,2) (2,9) (3,7) (4,5) (5,3) (6,1) (7,10) (8,10) (9,8) (10,6) (11,4) (12,2) (13,10) (14,10) (15,8) (
    16,6) (17,4) (18,2) (19,0) (20,10) (21,10) (22,8) (23,6) (0,4) (1,2) (2,0) (3,10) (4,10) (5,10) (6,8) (7,6) (8,4) (9,2) (10,10) (11,
    10) (12,8) (13,6) (14,4) (15,2) (16,0) (17,10) (18,10) (19,8) (20,6) (21,4) (22,2) (23,0) (0,10) (1,10) (2,10) (3,8) (4,6) (5,4) (6,2)
    (7,10) (8,10) (9,8) (10,6) (11,4) (12,2) (13,0) (14,10) (15,10) (16,8) (17,6) (18,4) (19,2) (20,0) (21,10) (22,10) (23,10) (0,8) (1,6)
    (2,4) (3,2) (4,9) (5,7) (6,5) 7,3"""

good_temp_range = (20, 30)
air_quality_limit = 0

def get_tuples(string):
    single_line = string.replace(")\n", ") ")
    single_line = single_line.replace("\n", "")
    normalized = single_line.replace("    ", "")
    tuple_list = normalized.split()
    if not "(" in tuple_list[-1]:
      tuple_list[-1] = f"({tuple_list[-1]})"
    tuples = []
    for string_tuple in tuple_list:
      tuples.append(ast.literal_eval(string_tuple))
    return tuples;

def analyse_temperature(tuples):
  errors = 0
  for tuple in tuples:
      if tuple[1] < good_temp_range[0] or tuple[1] > good_temp_range[1]:
        errors += 1
  return errors

def analyse_air_qualities(tuples):
  errors = 0
  for tuple in tuples:
      if tuple[1] < air_quality_limit:
        errors += 1
  return errors

def display_result(temp_errors, aq_errors):
  print(f"Temperature errors: {temp_errors}\nAir quality errors: {aq_errors}\nTotal errors:\t    {temp_errors + aq_errors}")

temperature_tuples = get_tuples(temperatures)
air_quality_tuples = get_tuples(air_qualities)

temp_errors = analyse_temperature(temperature_tuples)
aq_errors = analyse_air_qualities(air_quality_tuples)

display_result(temp_errors, aq_errors)
