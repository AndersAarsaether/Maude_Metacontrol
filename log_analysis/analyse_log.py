import ast

temperatures = """(0,205) (0,205) (0,207) (0,207) (0,209) (0,209) (0,211) (0,214) (0,213) (0,216) (0,215) (0,218) (0,221) (0,220) (0,220) 
    (0,220) (0,222) (0,222) (0,224) (0,224) (0,226) (0,226) (0,228) (0,228) (0,230) (0,230) (0,232) (0,232) (0,234) (0,234) (0,236) (0,  
    239) (0,238) (0,241) (0,240) (0,243) (0,246) (0,245) (0,245) (0,245) (0,247) (0,247) (0,249) (0,249) (0,251) (0,251) (0,253) (0,253) 
    (0,255) (0,255) (0,257) (0,257) (0,259) (0,259) (0,261) (0,264) (0,263) (0,266) (0,265) (0,268) (0,271) (0,270) (0,270) (0,270) (0,  
    272) (0,272) (0,274) (0,274) (0,276) (0,276) (0,278) (0,278) (0,280) (0,280) (0,282) (0,282) (0,284) (0,284) (0,286) (0,289) (0,288) 
    (0,291) (0,290) (0,293) (0,296) (0,295) (0,295) (0,295) (0,297) (0,297) (0,299) (0,299) (0,301) (0,281) (0,281) (0,281) (0,281) (0,  
    281) (0,281) (0,281) (0,281) (0,281) (0,281) (0,284) (0,283) (0,286) (0,285) (0,288) (0,291) (0,290) (0,290) (0,290) (0,292) (0,292) 
    (0,294) (0,294) (0,296) (0,296) (0,298) (0,298) (0,300) (0,300) (0,302) (0,282) (0,282) (0,282) (0,282) (0,285) (0,288) (0,291) (0,  
    294) (0,293) (0,296) (0,295) (0,295) (0,295) (0,295) (0,297) (0,297) (0,299) (0,299) (0,301) (0,281) (0,281) (0,281) (0,281) (0,281) 
    (0,281) (0,281) (0,281) (0,281) (0,284) (0,283) (0,286) (0,289) (0,288) (0,291) (0,290) (0,290) (0,290) (0,290) (0,292) (0,292) (0,  
    294) (0,294) (0,296) (0,296) (0,298) (0,298) (0,300) (0,300) (0,302) (0,282) (0,282) (0,282) (0,285) (0,288) (0,291) (0,294) (0,293) 
    (0,296) (0,299) (0,301) (0,281) (0,281) (0,281) (0,281) (0,281) (0,281) (0,281) (0,281) (0,281) (0,281) (0,281) (0,283) (0,283) (0,  
    285) (0,285) (0,287) 0,290"""

air_qualities = """(0,1) (0,-7) (0,-6) (0,8) (0,0) (0,1) (0,0) (0,3) (0,1) (0,-1) (0,10) (0,5) (0,3) (0,1) (0,0) (0,1) (0,0) (0,1) (0,10) (  
    0,2) (0,1) (0,0) (0,1) (0,0) (0,1) (0,0) (0,1) (0,0) (0,1) (0,10) (0,2) (0,0) (0,3) (0,1) (0,-1) (0,10) (0,5) (0,3) (0,2) (0,1) (0,  
    0) (0,1) (0,0) (0,1) (0,0) (0,1) (0,10) (0,2) (0,1) (0,0) (0,1) (0,0) (0,1) (0,0) (0,1) (0,-1) (0,10) (0,5) (0,3) (0,1) (0,-1) (0,   
    10) (0,2) (0,1) (0,0) (0,1) (0,10) (0,2) (0,1) (0,0) (0,1) (0,0) (0,1) (0,0) (0,1) (0,0) (0,1) (0,10) (0,2) (0,0) (0,3) (0,1) (0,-1) 
    (0,10) (0,5) (0,3) (0,2) (0,1) (0,0) (0,1) (0,0) (0,1) (0,0) (0,1) (0,10) (0,2) (0,1) (0,0) (0,1) (0,0) (0,1) (0,0) (0,1) (0,-1) (0, 
    10) (0,5) (0,3) (0,1) (0,-1) (0,10) (0,2) (0,1) (0,0) (0,1) (0,10) (0,2) (0,1) (0,0) (0,1) (0,0) (0,1) (0,0) (0,1) (0,0) (0,1) (0,   
    (0,0) (0,1) (0,0) (0,1) (0,-1) (0,10) (0,5) (0,3) (0,1) (0,-1) (0,10) (0,2) (0,1) (0,0) (0,1) (0,10) (0,2) (0,1) (0,0) (0,1) (0,0) ( 
    0,1) (0,0) (0,1) (0,0) (0,1) (0,10) (0,2) (0,0) (0,3) (0,1) (0,-1) (0,10) (0,5) (0,3) (0,2) (0,1) (0,0) (0,1) (0,0) (0,1) (0,0) (0,  
    1) (0,10) (0,2) (0,1) (0,0) (0,1) (0,0) (0,1) (0,0) (0,1) 0,-1"""

good_temp_range = (200, 300)
air_quality_limit = 0

def get_tuples(string):
    single_line = string.replace(")\n", ") ")
    single_line = single_line.replace("\n", "")
    normalized = single_line.replace("    ", "")
    tuple_list = normalized.split()
    if not "(" in tuple_list[-1]:
      tuple_list[-1] = f"({tuple_list[-1]})"
    tuples = []
    for string_tuple in tuple_list:
      tuples.append(ast.literal_eval(string_tuple))
    return tuples;

def analyse_temperature(tuples):
  errors = 0
  for tuple in tuples:
      if tuple[1] < good_temp_range[0] or tuple[1] > good_temp_range[1]:
        errors += 1
  return errors

def analyse_air_qualities(tuples):
  errors = 0
  for tuple in tuples:
      if tuple[1] < air_quality_limit:
        errors += 1
  return errors

def display_result(temp_errors, aq_errors):
  print(f"Temperature errors: {temp_errors}\nAir quality errors: {aq_errors}\nTotal errors:\t    {temp_errors + aq_errors}")

temperature_tuples = get_tuples(temperatures)
air_quality_tuples = get_tuples(air_qualities)

temp_errors = analyse_temperature(temperature_tuples)
aq_errors = analyse_air_qualities(air_quality_tuples)

display_result(temp_errors, aq_errors)
