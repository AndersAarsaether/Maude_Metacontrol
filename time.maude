in metacontrol.maude

mod TIME is
  protecting METACONTROL .

  vars C QA : Oid .
  var TS : Timesteps .
  var TI : Time .
  var N : Nat .
  var EL : EcoList .
  var QAS : QaStatus .
  var QAL : QaList .
  vars CONF : Configuration .

  op advance : Configuration -> Configuration .
  eq advance(< QA :QaEcology | Consider: N, Past: EL, Status: QAS, QAComputed: yes > CONF)
      = < QA :QaEcology | Consider: N, Past: EL, Status: QAS, QAComputed: no > advance(CONF) .
  eq advance(< QA :QaComfort | Consider: N, Past: QAL, Status: QAS, QAComputed: yes > CONF)
      = < QA :QaComfort | Consider: N, Past: QAL, Status: QAS, QAComputed: no > advance(CONF) .
  eq advance(< QA :QaAirquality | Consider: N, Past: QAL, Status: QAS, QAComputed: yes > CONF)
      = < QA :QaAirquality | Consider: N, Past: QAL, Status: QAS, QAComputed: no > advance(CONF) .
  eq advance(CONF) = CONF [owise] .

  rl [timeAdvances] :
    {< C :Clock | Timesteps: TS, Time: TI >
    < Scheduler | Status: TimeChange, TempAqChange: true, McChange: true, ContrChange: true, TimeChange: true > CONF}
    =>
    {< C :Clock | Timesteps: TS + 1, Time: getTime(TS + 1) >
    < Scheduler | Status: TimeChange, TempAqChange: false, McChange: false, ContrChange: false, TimeChange: false > advance(CONF)}
    [print "rule: [timeAdvances]"] .



endm
eof
