mod WATERHEATERERRCONTROLLER is
  protecting CONTROLLERS .

  vars H W WH T C WHEC AQ : Oid .
  var DG : Temperature .
  var AQS : AirqualityStatus .
  var TI : Time .
  var TS : Timesteps .
  vars A A1 A2 : Attribute .


  *** We don't destinguish between morning and not morning, because the WH is always off

  *** If T ok, AQ ok -> H off, W closed, WH off
  crl [WhErrContrTempOkAqOk] :
    < H :Heater | A >
    < WH :Waterheater | A1 >
    < W :Window | A2 >
    < T :Thermometer | Degrees: DG >
    < AQ :Airquality | Value: AQS >
    < WHEC :WaterheaterErrController | Selected: yes, ConfigChanged: no >
    =>
    (msg hOff from WHEC to H)
    (msg whOff from WHEC to WH)
    (msg closed from WHEC to W)
    < H :Heater | A >
    < WH :Waterheater | A1 >
    < W :Window | A2 >
    < T :Thermometer | Degrees: DG >
    < AQ :Airquality | Value: AQS >
    < WHEC :WaterheaterErrController | Selected: yes, ConfigChanged: yes >
    if hot?(DG) == false /\ cold?(DG) == false /\ aqok?(AQS) == true
    [print "rule: [WhErrContrTempOkAqOk]"] .

  *** If T ok, AQ not ok -> H fairly hot, W open, WH off
  crl [WhErrContrTempOkAqNotOk] :
    < H :Heater | A >
    < WH :Waterheater | A1 >
    < W :Window | A2 >
    < T :Thermometer | Degrees: DG >
    < AQ :Airquality | Value: AQS >
    < WHEC :WaterheaterErrController | Selected: yes, ConfigChanged: no >
    =>
    (msg fairlyhot from WHEC to H)
    (msg whOff from WHEC to WH)
    (msg open from WHEC to W)
    < H :Heater | A >
    < WH :Waterheater | A1 >
    < W :Window | A2 >
    < T :Thermometer | Degrees: DG >
    < AQ :Airquality | Value: AQS >
    < WHEC :WaterheaterErrController | Selected: yes, ConfigChanged: yes >
    if hot?(DG) == false /\ cold?(DG) == false /\ aqok?(AQS) == false
    [print "rule: [WhErrContrTempOkAqNotOk]"] .

  *** If T low, AQ ok -> H very hot, W half open, WH off
  crl [WhErrContrTempLowAqOk] :
    < H :Heater | A >
    < WH :Waterheater | A1 >
    < W :Window | A2 >
    < T :Thermometer | Degrees: DG >
    < AQ :Airquality | Value: AQS >
    < WHEC :WaterheaterErrController | Selected: yes, ConfigChanged: no >
    =>
    (msg veryhot from WHEC to H)
    (msg whOff from WHEC to WH)
    (msg halfopen from WHEC to W)
    < H :Heater | A >
    < WH :Waterheater | A1 >
    < W :Window | A2 >
    < T :Thermometer | Degrees: DG >
    < AQ :Airquality | Value: AQS >
    < WHEC :WaterheaterErrController | Selected: yes, ConfigChanged: yes >
    if cold?(DG) == true /\ aqok?(AQS) == true
    [print "rule: [WhErrContrTempLowAqOk]"] .

  *** If T low, AQ not ok -> H very hot, W open, WH off
  crl [WhErrContrTempLowAqNotOk] :
    < H :Heater | A >
    < WH :Waterheater | A1 >
    < W :Window | A2 >
    < T :Thermometer | Degrees: DG >
    < AQ :Airquality | Value: AQS >
    < WHEC :WaterheaterErrController | Selected: yes, ConfigChanged: no >
    =>
    (msg veryhot from WHEC to H)
    (msg whOff from WHEC to WH)
    (msg open from WHEC to W)
    < H :Heater | A >
    < WH :Waterheater | A1 >
    < W :Window | A2 >
    < T :Thermometer | Degrees: DG >
    < AQ :Airquality | Value: AQS >
    < WHEC :WaterheaterErrController | Selected: yes, ConfigChanged: yes >
    if cold?(DG) == true /\ aqok?(AQS) == false
    [print "rule: [WhErrContrTempLowAqNotOk]"] .

  *** If T high, AQ ok -> H off, W half open, WH off
  crl [WhErrContrTempHighAqOk] :
    < H :Heater | A >
    < WH :Waterheater | A1 >
    < W :Window | A2 >
    < T :Thermometer | Degrees: DG >
    < AQ :Airquality | Value: AQS >
    < WHEC :WaterheaterErrController | Selected: yes, ConfigChanged: no >
    =>
    (msg hOff from WHEC to H)
    (msg whOff from WHEC to WH)
    (msg halfopen from WHEC to W)
    < H :Heater | A >
    < WH :Waterheater | A1 >
    < W :Window | A2 >
    < T :Thermometer | Degrees: DG >
    < AQ :Airquality | Value: AQS >
    < WHEC :WaterheaterErrController | Selected: yes, ConfigChanged: yes >
    if hot?(DG) == true /\ aqok?(AQS) == true
    [print "rule: [WhErrContrTempHighAqOk1]"] .


  *** If T high, AQ not ok -> H off, W open, WH off
  crl [WhErrContrTempHighAqNotOk] :
    < H :Heater | A >
    < WH :Waterheater | A1 >
    < W :Window | A2 >
    < T :Thermometer | Degrees: DG >
    < AQ :Airquality | Value: AQS >
    < WHEC :WaterheaterErrController | Selected: yes, ConfigChanged: no >
    =>
    (msg hOff from WHEC to H)
    (msg whOff from WHEC to WH)
    (msg open from WHEC to W)
    < H :Heater | A >
    < WH :Waterheater | A1 >
    < W :Window | A2 >
    < T :Thermometer | Degrees: DG >
    < AQ :Airquality | Value: AQS >
    < WHEC :WaterheaterErrController | Selected: yes, ConfigChanged: yes >
    if hot?(DG) == true /\ aqok?(AQS) == false
    [print "rule: [WhErrContrTempHighAqNotOk]"] .

  endm
